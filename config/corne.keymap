/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        winshor {
            bindings = <&kp LEFT_WIN>;
            key-positions = <40 41>;
        };
    };

    behaviors {
        Space_shift: Space_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
            hold-trigger-key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E      &kp R         &kp T                            &kp Y                     &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D      &kp F         &kp G                            &kp H                     &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&mo 2       &kp Z  &kp X  &kp C      &kp V         &kp B                            &kp N                     &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                          &kp LCTRL  &kp LEFT_ALT  &Space_shift LEFT_SHIFT SPACE    &Space_shift LSHFT SPACE  &mo 1  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none           &kp F1        &kp F2        &kp F3        &kp F4        &kp F5    &kp F6          &kp F7          &kp F8        &kp F9           &kp F10  &kp BSPC
&none           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6    &kp N7          &kp N8        &kp N9           &kp N0   &kp F11
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &none         &none         &none     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans   &kp F12
                                            &none         &trans        &trans    &trans          &trans          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&none  &kp DEL   &kp INS  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&none  &trans    &trans   &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                          &trans    &trans    &trans       &trans     &trans     &none
            >;
        };
    };
};
